---
# tasks file for ansible-role-asciidoc-content-exporter
- name: Check configuration is present
  stat:
    path: "{{work_dir}}/config.yml"
  register: config_stat

- name: Include configuration variables
  include_vars: "{{work_dir}}/config.yml"
  when: config_stat.stat.exists == True

- name: Copy sample configuration
  copy:
    dest: "{{work_dir}}" 
    src: config.yml 
  when: config_stat.stat.exists == False

- name: Copy docker-compose.yml
  copy:
    dest: "{{work_dir}}" 
    src: docker-compose.yml
  when: config_stat.stat.exists == False

- name: Copy .gitignore file
  template:
    dest: "{{work_dir}}/.gitignore" 
    src: .gitignore.j2
  when: config_stat.stat.exists == False

- name: Fail if configuration is not properly set
  fail:
    msg: 
    - "Cannot run the process: Configuration not found!"
    - "Don't worry. A sample config.yml and a docker-compose.yml have been created!"
    - "Next steps:"
    - "- Populate your {{content_dir_name}} folder with asciidoc content"
    - "- Edit config.yml by adding your files"
    - "- Restart the export process, using the same command or 'docker-compose run export' command."
  when: presentation is undefined and pdf is undefined

- include_tasks: install.yml

- name: Copy global ignore file to home dir
  copy:
    src: .gitignore_globals 
    dest: ~/.gitignore_globals
  when: conditional_rebuild == "git"
  
- name: Configure git for conditional rebuild
  shell: "git config --global core.excludesfile ~/.gitignore_globals"
  when: conditional_rebuild == "git"

- name: "Check for local modifications within submodules ..."
  shell: "git submodule --quiet foreach 'if [[ $(git status -z | head -c1 | wc -c) -ne 0 ]]; then echo $path $(git status -z);fi'"
  args:
    chdir: "{{work_dir}}"
  register: git_output

- debug:
    var: git_output
  when: debug

- set_fact:
    rebuild_item: (git_output.stdout_lines | select('match', content_dir_name) | list | length > 0) or (conditional_rebuild == "never")

- include_tasks: build_presentation.yml
  loop: "{{ presentation | default({}) | dict2items }}"
  loop_control: 
    loop_var: presentations

- include_tasks: build_pdf.yml
  loop: "{{ pdf | default({}) | dict2items }}"
  loop_control: 
    loop_var: pdfs