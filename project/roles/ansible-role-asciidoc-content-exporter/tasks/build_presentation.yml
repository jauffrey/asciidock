---
- name: "[PRESENTATION]: Check if custom css files exists"
  stat: 
    path: "{{sass_dir}}"
  register: themes

- name: "[PRESENTATION]: Remove {{presentations.key}} in {{export_dir}} folder"
  file:
    path: "{{export_dir}}/{{presentations.key}}"
    state: absent

- name: "[PRESENTATION]: Remove {{presentations.key}}{{asciidoc_extension}} in {{export_dir}} folder because of uncommitted changes"
  file:
    path: "{{export_dir}}/{{presentations.key}}{{asciidoc_extension}}"
    state: absent
  when: git_output.stdout_lines | select('match', content_dir_name) | list | length > 0

- name: "[PRESENTATION]: Check if merged document exists"
  stat:
    path: "{{export_dir}}/{{presentations.key}}{{asciidoc_extension}}"
  register: presentation_stat

- name: "[PRESENTATION]: Content aggregation"
  lineinfile: 
    dest: "{{export_dir}}/{{presentations.key}}{{asciidoc_extension}}"
    line: "{{lookup('file', item )}}"
    create: yes
  loop: "{{presentations.value}}"
  when: presentation_stat.stat.exists == False

- name: "[PRESENTATION]: Build and add custom theme"
  command: "node {{export_dir}}/node_modules/.bin/sass {{sass_dir}}/{{theme_name}}.scss {{export_dir}}/reveal.js/css/theme/{{theme_name}}.css"
  when: themes.stat.exists == True

- name: "[PRESENTATION]: Build and add custom theme"
  copy:
      dest: "{{export_dir}}/reveal.js/css/theme/" # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
      src: "{{sass_dir}}/" # not required. Local path to a file to copy to the remote server; can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to Rsync.
  when: themes.stat.exists == True

- name: "[PRESENTATION]: HTML Content export"
  # Note: Content dir here is relative to the location of the merged presentation. So we need to go back to the root of the project
  command: "{{export_dir}}/.bundle/.bin/asciidoctor-revealjs -a content_dir=../{{content_dir}} {{export_dir}}/{{presentations.key}}{{asciidoc_extension}} -D {{export_dir}} -o {{presentations.key}}"
  when: presentation_stat.stat.exists == False or themes.stat.exists == True